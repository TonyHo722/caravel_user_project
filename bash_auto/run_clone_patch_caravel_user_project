#!/bin/bash

set -x # echo on for debug 

# setup your main folder(MF)
export MF=/home/tonyho/workspace/debug/fsic_caravel_user_project

# setup your fsic_fpga folder(FFF)
export FFF=/home/tonyho/workspace/fsic/fsic_fpga

# setup your fsic_asic folder(FFF)
export FAF=/home/tonyho/workspace/fsic/fsic_asic

# setup your PRECHECK_ROOT 
export PRECHECK_ROOT=$MF/mpw_precheck
# setup your log folder(LF)
export LF=$MF/log-0906
# setup your caravel-lab folder(CLF)
export CLF=$MF/caravel-lab
# setup your caravel_user_project folder(CUPF)
export CUPF=$MF/caravel_user_project
# override the MPW_TAG to fsic
export MPW_TAG=fsic

cd $MF
if [ ! -d "$MF" ] ;
then
    echo "$MF not exist, please create it"
    exit 1
fi    

[ ! -d $LF ] && echo "$LF not exist, create it" && mkdir $LF
[ -d $CLF ] && echo "$CLF exist, remove it" && rm -rf $CLF
[ ! -d $CLF ] && echo "$CLF not exist, git clone it" && git clone https://github.com/TonyHo722/caravel-lab
[ ! -d $CUPF ] && echo "$CUPF not exist, git clone it" && git clone -b $MPW_TAG https://github.com/TonyHo722/caravel_user_project

cd $FFF
git log -1 2>&1 | tee $LF/mpw-8c-FFF-git-log.log
cd $FAF
git log -1 2>&1 | tee $LF/mpw-8c-FAF-git-log.log
cd $CUPF
git log -1 2>&1 | tee $LF/mpw-8c-CUPF-git-log.log
mkdir dependencies
export OPENLANE_ROOT=$(pwd)/dependencies/openlane_src
export PDK_ROOT=$(pwd)/dependencies/pdks
export PDK=sky130A

make -d setup 2>&1 | tee $LF/mpw-8c-make-steup.log

# Run RTL simulation
cp $FFF/rtl/user/rtl/user_project_wrapper.v $CUPF/verilog/rtl/user_project_wrapper.v
cp $FFF/rtl/user/rtl/fsic.vo $CUPF/verilog/rtl/fsic.vo
cp $FFF/rtl/user/axilite_axis/rtl/axilite_master.sv $CUPF/verilog/rtl/axilite_master.sv
cp $FFF/rtl/user/axilite_axis/rtl/axilite_slave.sv $CUPF/verilog/rtl/axilite_slave.sv
cp $FFF/rtl/user/axilite_axis/rtl/axis_master.sv $CUPF/verilog/rtl/axis_master.sv
cp $FFF/rtl/user/axilite_axis/rtl/axis_slave.sv $CUPF/verilog/rtl/axis_slave.sv
#cp $FFF/rtl/user/axilite_axis/rtl/axi_ctrl_logic.sv $CUPF/verilog/rtl/axi_ctrl_logic.sv
cp $FFF/rtl/user/axilite_axis/rtl/axil_axis.sv $CUPF/verilog/rtl/axil_axis.sv
cp $FFF/rtl/user/axis_switch/rtl/sw_caravel.v $CUPF/verilog/rtl/sw_caravel.v
cp $FFF/rtl/user/config_ctrl/rtl/config_ctrl.v $CUPF/verilog/rtl/config_ctrl.v
cp $FFF/rtl/user/fsic_clkrst/rtl/fsic_clkrst.v $CUPF/verilog/rtl/fsic_clkrst.v
cp $FFF/rtl/user/io_serdes/rtl/io_serdes.v $CUPF/verilog/rtl/io_serdes.v
cp $FFF/rtl/user/io_serdes/rtl/fsic_coreclk_phase_cnt.v $CUPF/verilog/rtl/fsic_coreclk_phase_cnt.v
cp $FFF/rtl/user/io_serdes/rtl/fsic_io_serdes_rx.v $CUPF/verilog/rtl/fsic_io_serdes_rx.v
cp $FFF/rtl/user/mprj_io/rtl/mprj_io.sv $CUPF/verilog/rtl/mprj_io.sv
cp $FFF/rtl/user/user_subsys/rtl/user_subsys.all.v $CUPF/verilog/rtl/user_subsys.all.v
cp $FFF/rtl/user/logic_analyzer/rtl/logic_anlz.dummy_io.vd $CUPF/verilog/rtl/logic_anlz.dummy_io.vd

# how to define USER_PROJ_IRQ0_EN?
mkdir $CUPF/verilog/dv/system_test114
cp $CLF/custom_design/gcd/verify-la_test1_debug-rtl/Makefile $CUPF/verilog/dv/system_test114/Makefile
cp $FAF/verif/vsim/tests/system_test114/system_test114.c $CUPF/verilog/dv/system_test114/system_test114.c
cp $FAF/verif/vsim/tests/system_test114/top_bench.sv $CUPF/verilog/dv/system_test114/system_test114_tb.sv
mkdir $CUPF/verilog/dv/system_test111
cp $CLF/custom_design/gcd/verify-la_test1_debug-rtl/Makefile $CUPF/verilog/dv/system_test111/Makefile
cp $FAF/verif/vsim/tests/system_test111/system_test111.c $CUPF/verilog/dv/system_test111/system_test111.c
cp $FAF/verif/vsim/tests/system_test111/top_bench.sv $CUPF/verilog/dv/system_test111/system_test111_tb.sv

#cp $CLF/custom_design/gcd/user_proj_example/user_proj_example.v $CUPF/verilog/rtl/user_proj_example.v
#cp $CLF/custom_design/gcd/verify-la_test1-rtl/la_test1.c $CUPF/verilog/dv/la_test1/la_test1.c
#cp $CLF/custom_design/gcd/verify-la_test1-rtl/la_test1_tb.v $CUPF/verilog/dv/la_test1/la_test1_tb.v
make -d simenv 2>&1 | tee $LF/mpw-8c-simenv.log
make -d verify-system_test111-rtl 2>&1 | tee $LF/mpw-8c-verify-system_test111-rtl.log
exit 1

# Run Openlane to generate RTL netlist
cp $CLF/custom_design/gcd/user_proj_example/config.json $CUPF/openlane/user_proj_example/config.json
make -d user_proj_example 2>&1 | tee $LF/mpw-8c-user_proj_example.log
make -d user_project_wrapper 2>&1 | tee $LF/mpw-8c-user_project_wrapper.log

# Run gate level simulation (it will take 2~3 hours@i9/64GB)
make -d verify-la_test1-gl 2>&1 | tee $LF/mpw-8c-verify-la_test1-gl.log

# Run gate level static timing verifier
make -d setup-timing-scripts 2>&1 | tee $LF/mpw-8c-setup-timing-scripts.log
make -d extract-parasitics 2>&1 | tee $LF/mpw-8c-extract-parasitics.log
make -d create-spef-mapping 2>&1 | tee $LF/mpw-8c-create-spef-mapping.log

## patch caravel-sta fail issue
#cp ~/workspace/fsic/git_caravel_user_project/deps/timing-scripts/scripts/openroad/timing_top.tcl $CUPF/deps/timing-scripts/scripts/openroad/timing_top.tcl

make -d caravel-sta 2>&1 | tee $LF/mpw-8c-caravel-sta.log

# Run MPW precheck
cp $CLF/custom_design/gcd/mpw_precheck/README.md  $CUPF/README.md
cp $CLF/custom_design/gcd/mpw_precheck/user_defines.v  $CUPF/verilog/rtl/user_defines.v
make -d precheck 2>&1 | tee $LF/mpw-8c-precheck.log
make -d run-precheck 2>&1 | tee $LF/mpw-8c-run-precheck.log
~
